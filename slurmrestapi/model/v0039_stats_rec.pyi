# coding: utf-8

"""
    Slurm Rest API

    API to access and control Slurm.  # noqa: E501

    The version of the OpenAPI document: 0.0.39
    Contact: sales@schedmd.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from slurmrestapi import schemas  # noqa: F401


class V0039StatsRec(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            time_start = schemas.Int64Schema
        
            @staticmethod
            def rollups() -> typing.Type['V0039RollupStats']:
                return V0039RollupStats
        
            @staticmethod
            def RPCs() -> typing.Type['V0039StatsRpcList']:
                return V0039StatsRpcList
        
            @staticmethod
            def users() -> typing.Type['V0039StatsUserList']:
                return V0039StatsUserList
            __annotations__ = {
                "time_start": time_start,
                "rollups": rollups,
                "RPCs": RPCs,
                "users": users,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["time_start"]) -> MetaOapg.properties.time_start: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rollups"]) -> 'V0039RollupStats': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["RPCs"]) -> 'V0039StatsRpcList': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["users"]) -> 'V0039StatsUserList': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["time_start", "rollups", "RPCs", "users", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["time_start"]) -> typing.Union[MetaOapg.properties.time_start, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rollups"]) -> typing.Union['V0039RollupStats', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["RPCs"]) -> typing.Union['V0039StatsRpcList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["users"]) -> typing.Union['V0039StatsUserList', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["time_start", "rollups", "RPCs", "users", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        time_start: typing.Union[MetaOapg.properties.time_start, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        rollups: typing.Union['V0039RollupStats', schemas.Unset] = schemas.unset,
        RPCs: typing.Union['V0039StatsRpcList', schemas.Unset] = schemas.unset,
        users: typing.Union['V0039StatsUserList', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'V0039StatsRec':
        return super().__new__(
            cls,
            *_args,
            time_start=time_start,
            rollups=rollups,
            RPCs=RPCs,
            users=users,
            _configuration=_configuration,
            **kwargs,
        )

from slurmrestapi.model.v0039_rollup_stats import V0039RollupStats
from slurmrestapi.model.v0039_stats_rpc_list import V0039StatsRpcList
from slurmrestapi.model.v0039_stats_user_list import V0039StatsUserList
